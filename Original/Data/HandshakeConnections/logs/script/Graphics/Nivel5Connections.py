import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Nuevos datos organizados
data = {
    'Algorithm': ['ed448', 'dilithium5', 'falcon1024', 'sphincs256f', 'sphincs256s'],
    'P-521_run1': [105.29, 116.54, 115.56, 80.54, 88.89],
    'P-521_run2': [108.38, 116.33, 116.7, 67.09, 92.31],
    'P-521_run3': [101.83, 116.97, 114.26, 63.9, 92.59],
    'P-521_run4': [103.24, 63.47, 115.65, 77.64, 86.21],
    'P-521_run5': [85.61, 80.14, 116.44, 81.33, 89.29],
    'P-521_run6': [88.85, 116.3, 114.07, 80.17, 88.89],
    'P-521_run7': [100.73, 116.7, 116.22, 81.06, 89.29],
    'P-521_run8': [86.15, 117, 116.03, 78.39, 86.21],
    'P-521_run9': [91.58, 116.82, 112.88, 79.65, 88.89],
    'P-521_run10': [97.97, 115.76, 115.36, 80.7, 48.57],
    'P-521_run11': [104.19, 117.12, 79.89, 80.35, 89.29],
    'P-521_run12': [107.45, 117.24, 115.62, 80.79, 80],
    'P-521_run13': [111.59, 117.06, 79.38, 75.95, 81.48],
    'P-521_run14': [103.83, 117, 115.65, 78.72, 62.5],
    'P-521_run15': [104.99, 116.85, 115.84, 81.06, 89.29],
    'P-521_run16': [104.36, 116.88, 116.54, 80.7, 71.43],
    'P-521_run17': [108.18, 116.09, 114.99, 79.4, 92.31],
    'P-521_run18': [107.26, 115.88, 115.71, 81.5, 89.29],
    'P-521_run19': [109.94, 117.03, 116, 75.86, 88.89],
    'P-521_run20': [104.2, 117.82, 116.25, 80.97, 86.21],
    'P-521_run21': [111.29, 114.57, 116.86, 78.97, 96.15],
    'P-521_run22': [110.65, 116.27, 82.27, 79.65, 92.59],
    'P-521_run23': [110.42, 117.06, 115.74, 80.09, 85.71],
    'P-521_run24': [101.28, 117, 115.46, 79.74, 86.21],
    'P-521_run25': [106.34, 115.68, 116.63, 82.22, 82.76],
    'P-521_run26': [110.97, 116.82, 114.18, 76.35, 89.29],
    'P-521_run27': [111.8, 116.49, 115.27, 79.57, 92.31],
    'P-521_run28': [111.98, 117.03, 114.83, 79.82, 89.29],
    'P-521_run29': [111.8, 116.46, 114.61, 79.57, 92.59],
    'P-521_run30': [111.82, 103.28, 115.93, 80.35, 88.89],
    'P-521_run31': [111.5, 76.6, 116.7, 80.7, 75.76],
    'P-521_run32': [111.45, 116.04, 81.77, 79.65, 92.31],
    'P-521_run33': [111.64, 115.88, 114.8, 79.48, 92.59],
    'P-521_run34': [112.39, 111.59, 71.66, 75.93, 89.29],
    'P-521_run35': [111.8, 92.78, 98.84, 80.97, 92.59],
    'P-521_run36': [111.33, 117.7, 110.08, 79.65, 82.76],
    'P-521_run37': [106.49, 117.45, 86.3, 79.06, 92.31],
    'P-521_run38': [111.25, 117.12, 115.59, 81.42, 89.29],
    'P-521_run39': [112.18, 116.64, 116.41, 81.5, 92.59],
    'P-521_run40': [112.48, 117.45, 115.46, 77.97, 88.89],
    'P-521_run41': [111.84, 113, 115.84, 81.06, 86.21],
    'P-521_run42': [111.43, 117.24, 116.06, 77.45, 88.89],
    'P-521_run43': [111.86, 79.89, 116.28, 80.7, 89.29],
    'P-521_run44': [112, 115.97, 115.68, 77.39, 89.29],
    'P-521_run45': [111.88, 116.46, 116.44, 78.21, 89.29],
    'P-521_run46': [112.43, 116.82, 116.41, 80.62, 92.31],
    'P-521_run47': [111.62, 112.68, 115.87, 81.14, 89.29],
    'P-521_run48': [110.89, 116.49, 116.86, 81.06, 92.59],
    'P-521_run49': [112.02, 116.64, 116.03, 65.68, 89.29],
    'P-521_run50': [112.57, 116.67, 115.87, 78.3, 88.89],
    
    'kyber1024_run1': [786.68, 1081.06, 921.6, 221, 383.33],
    'kyber1024_run2': [788.11, 837.54, 1008.19, 222.77, 312.5],
    'kyber1024_run3': [778.92, 1096.08, 1002.72, 222.77, 325],
    'kyber1024_run4': [785.71, 1076.43, 1010.72, 219.61, 357.14],
    'kyber1024_run5': [776.72, 1094.88, 996.54, 223.76, 325],
    'kyber1024_run6': [787.41, 773.63, 990.42, 219.42, 357.14],
    'kyber1024_run7': [775.99, 1100.86, 991.65, 222.77, 288.89],
    'kyber1024_run8': [780.35, 1035.62, 1013.32, 152.94, 312.5],
    'kyber1024_run9': [788.89, 1090.55, 1007.58, 223.76, 307.69],
    'kyber1024_run10': [783.93, 1074.11, 1001.2, 222.78, 285.71],
    'kyber1024_run11': [787.76, 1080.17, 1000.38, 219.42, 285.71],
    'kyber1024_run12': [785.26, 1085.57, 998.25, 221.39, 285.71],
    'kyber1024_run13': [786.54, 1088.7, 999.5, 222.77, 285.71],
    'kyber1024_run14': [778.92, 1086.49, 1000.58, 222.78, 285.71],
    'kyber1024_run15': [783.73, 1087.57, 999.25, 221.84, 285.71],
    'kyber1024_run16': [788.15, 1087.41, 1000.48, 221.39, 285.71],
    'kyber1024_run17': [785.76, 1088.26, 1000.23, 221.39, 285.71],
    'kyber1024_run18': [785.73, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run19': [785.73, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run20': [785.76, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run21': [785.73, 1088.38, 1000.23, 221.39, 285.71],
    'kyber1024_run22': [785.76, 1088.26, 1000.23, 221.39, 285.71],
    'kyber1024_run23': [785.76, 1088.38, 1000.23, 221.39, 285.71],
    'kyber1024_run24': [785.73, 1088.38, 1000.23, 221.39, 285.71],
    'kyber1024_run25': [785.73, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run26': [785.76, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run27': [785.73, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run28': [785.76, 1088.38, 1000.23, 221.39, 285.71],
    'kyber1024_run29': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run30': [785.73, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run31': [785.76, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run32': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run33': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run34': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run35': [785.73, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run36': [785.73, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run37': [785.76, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run38': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run39': [785.73, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run40': [785.73, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run41': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run42': [785.73, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run43': [785.76, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run44': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run45': [785.73, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run46': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run47': [785.76, 1088.38, 1000.23, 221.84, 285.71],
    'kyber1024_run48': [785.76, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run49': [785.73, 1088.26, 1000.23, 221.84, 285.71],
    'kyber1024_run50': [785.73, 1088.38, 1000.23, 221.84, 285.71]
}

# Crear un DataFrame a partir del diccionario
df = pd.DataFrame(data)

# Calcular la media y la desviación estándar
df['P-521_mean'] = df[[col for col in df.columns if col.startswith('P-521')]].mean(axis=1)
df['P-521_std'] = df[[col for col in df.columns if col.startswith('P-521')]].std(axis=1)
df['kyber1024_mean'] = df[[col for col in df.columns if col.startswith('kyber1024')]].mean(axis=1)
df['kyber1024_std'] = df[[col for col in df.columns if col.startswith('kyber1024')]].std(axis=1)


# Mostrar las estadísticas en la gráfica
fig, ax = plt.subplots(figsize=(14, 8))
# Define print-friendly colors
colors = ['#004c6d', '#d1495b']

# Bar width
bar_width = 0.35
index = np.arange(len(df))


# Plotting the data
bars1 = ax.bar(index - bar_width/2, df['P-521_mean'], bar_width, label='P-521', yerr=df['P-521_std'], capsize=5, color=colors[0])
bars2 = ax.bar(index + bar_width/2, df['kyber1024_mean'], bar_width, label='kyber1024', yerr=df['kyber1024_std'], capsize=5, color=colors[1])

# Adding labels, title, and legend
ax.set_xlabel('Signature Algorithm', fontsize=26)
ax.set_ylabel('Connections/user sec', fontsize=26)
#ax.set_title('Statistical Analysis of Connections', fontsize=20)
ax.set_xticks(index)
ax.set_xticklabels(df['Algorithm'], fontsize=26, ha='center')

# Place the legend inside the plot with title 'KEM Algorithm'
#legend = ax.legend(fontsize=26, loc='upper left', bbox_to_anchor=(0.65, 0.95), title='KEM Algorithm')
legend = ax.legend(fontsize=26, loc='best', title='KEM Algorithm', title_fontsize=26)

plt.setp(legend.get_title(), fontsize=26)

# Add grid
plt.grid(axis = 'y', linestyle='--')

# Make the numbers on the axes larger for better readability
ax.tick_params(axis='both', which='major', labelsize=26)

plt.tight_layout()

# Save the plot as a PNG file
plt.savefig('./Nivel5Connections.png')

plt.show()